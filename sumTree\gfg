struct Node
{
    int data;
    Node* left, * right;
}; */

// Should return true if tree is Sum Tree, else false
class Solution
{
    public:
    
    pair<bool, int> isSum(Node* root)
    {
        if(root==NULL)
        {
            pair<bool, int> p=make_pair(true, 0);
            return p;
        }
        
        if(root->left==NULL && root->right==NULL)
        {
            pair<bool, int>p=make_pair(true, root->data);
            return p;
            
        }
        
        pair<bool, int>leftAns=isSum(root->left);
        pair<bool, int>rightAns=isSum(root->right);
        
        bool isLeft=leftAns.first;
        bool isRight=rightAns.first;
        
        bool condition=root->data==leftAns.second+rightAns.second;
        
        pair<bool, int>ans;
        
        if(isLeft && isRight && condition)
        {
            ans.first=true;
            ans.second=2*root->data;
        }
        else
        {
            ans.first=false;
        }
        return ans;
        
    }
    bool isSumTree(Node* root)
    {
         // Your code here
         return isSum(root).first;
    }
};
